{"version":3,"sources":["./src/app/tab1/tab1.page.html","./src/app/tab1/tab1.module.ts","./src/app/tab1/tab1.page.scss","./src/app/tab1/tab1.page.ts"],"names":[],"mappings":"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","file":"tab1-tab1-module-es2015.js","sourcesContent":["export default \"<ion-header >\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>\\n      Calculate Score\\n    </ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tabs/tab2\\\"></ion-back-button>\\n  </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>  \\n  <form [formGroup]=\\\"batsForm\\\" (ngSubmit)=\\\"submitForm()\\\" novalidate>\\n        <!-- Inputs with labels -->\\n      <ion-item>\\n        <ion-label position=\\\"fixed\\\">Age </ion-label>\\n        <ion-input formControlName=\\\"age\\\" type=\\\"number\\\" pattern=\\\"[0-9]*\\\" placeholder=\\\"Enter age\\\" ></ion-input>\\n        <ion-select formControlName=\\\"period\\\" value=\\\"years\\\" okText=\\\"Select\\\" cancelText=\\\"Cancel\\\">\\n          <ion-select-option value=\\\"years\\\">Years</ion-select-option>\\n          <ion-select-option value=\\\"months\\\">Months</ion-select-option>\\n        </ion-select>\\n        <!-- <ion-input (click)=\\\"showPicker()\\\" value=\\\"{{ age }} {{ period }}\\\"></ion-input> -->\\n      </ion-item>\\n      <ion-item *ngIf=\\\"batsForm.get('age').dirty && errorControl.age.invalid\\\">\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"batsForm.get('age').dirty && errorControl.age.errors?.min\\\">\\n          Age must be greater than 0\\n        </ion-text>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"batsForm.get('age').dirty && errorControl.age.errors?.max\\\">\\n          Age must be less than 116\\n        </ion-text>\\n        <ion-text color=\\\"danger\\\"*ngIf=\\\"batsForm.get('age').dirty && errorControl.age.errors?.required\\\">\\n          An age value is required\\n        </ion-text>\\n      </ion-item>\\n\\n\\n      <ion-radio-group formControlName=\\\"penetrating\\\" >\\n        <ion-list-header>\\n          <ion-label>Penetrating injury</ion-label>\\n        </ion-list-header>\\n    \\n        <ion-item>\\n          <ion-label>Yes</ion-label>\\n          <ion-radio slot=\\\"start\\\" value=\\\"yes\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item>\\n          <ion-label>No</ion-label>\\n          <ion-radio slot=\\\"start\\\" value=\\\"no\\\" checked></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n  \\n      <ion-radio-group formControlName=\\\"velocity\\\" >\\n        <ion-list-header>\\n          <ion-label>High velocity trauma</ion-label>\\n        </ion-list-header>\\n    \\n        <ion-item>\\n          <ion-label>Yes</ion-label>\\n          <ion-radio slot=\\\"start\\\" value=\\\"yes\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item>\\n          <ion-label>No</ion-label>\\n          <ion-radio slot=\\\"start\\\" value=\\\"no\\\" checked></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n\\n\\n    <ion-item>\\n      <ion-label position=\\\"fixed\\\">Systolic BP</ion-label>\\n      <ion-input formControlName=\\\"bp\\\" type=\\\"number\\\" pattern=\\\"[0-9]*\\\"  min=\\\"0\\\" max=\\\"240\\\" required debounce=\\\"1000\\\"></ion-input>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"batsForm.get('bp').dirty && errorControl.bp.invalid\\\">\\n      <ion-text color=\\\"danger\\\" *ngIf=\\\"batsForm.get('bp').dirty && errorControl.bp.errors?.min\\\">\\n        BP must be greater than 0mmHg\\n      </ion-text>\\n      <ion-text color=\\\"danger\\\" *ngIf=\\\"batsForm.get('bp').dirty  && errorControl.bp.errors?.max\\\">\\n        BP must be less than 240mmHg\\n      </ion-text>\\n      <ion-text color=\\\"danger\\\"*ngIf=\\\"batsForm.get('bp').dirty && errorControl.bp.errors?.required\\\">\\n        Blood pressure value is required\\n      </ion-text>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"fixed\\\">GCS</ion-label>\\n      <ion-input formControlName=\\\"gcs\\\" type=\\\"number\\\" pattern=\\\"[0-9]*\\\" min=\\\"3\\\" max=\\\"15\\\" required debounce=\\\"1000\\\"></ion-input>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"batsForm.get('gcs').dirty && errorControl.gcs.invalid\\\">\\n      <ion-text color=\\\"danger\\\" *ngIf=\\\"batsForm.get('gcs').dirty && errorControl.gcs.errors?.min\\\">\\n        GCS must be 3 or more\\n      </ion-text>\\n      <ion-text color=\\\"danger\\\" *ngIf=\\\"batsForm.get('gcs').dirty  && errorControl.gcs.errors?.max\\\">\\n        GCS must be 15 or less\\n      </ion-text>\\n      <ion-text color=\\\"danger\\\"*ngIf=\\\"batsForm.get('gcs').dirty && errorControl.gcs.errors?.required\\\">\\n        A GCS is required\\n      </ion-text>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"fixed\\\">Resp Rate</ion-label>\\n      <ion-input formControlName=\\\"rr\\\" type=\\\"number\\\" pattern=\\\"[0-9]*\\\" min=\\\"0\\\" max=\\\"60\\\" required></ion-input>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"batsForm.get('rr').dirty && errorControl.rr.invalid\\\">\\n      <ion-text color=\\\"danger\\\" *ngIf=\\\"batsForm.get('rr').dirty && errorControl.rr.errors?.min\\\">\\n        Resp rate must be greater than 0\\n      </ion-text>\\n      <ion-text color=\\\"danger\\\" *ngIf=\\\"batsForm.get('rr').dirty  && errorControl.rr.errors?.max\\\">\\n        Resp rate must be less than 60\\n      </ion-text>\\n      <ion-text color=\\\"danger\\\"*ngIf=\\\"batsForm.get('rr').dirty && errorControl.rr.errors?.required\\\">\\n        A respiratory rate is required\\n      </ion-text>\\n    </ion-item>\\n\\n\\n    <ion-item>\\n      <ion-label position=\\\"fixed\\\">SpO2 on air</ion-label>\\n      <ion-input formControlName=\\\"spo2\\\" type=\\\"number\\\" pattern=\\\"[0-9]*\\\" min=\\\"50\\\" max=\\\"100\\\" required debounce=\\\"1000\\\"></ion-input>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"batsForm.get('spo2').dirty && errorControl.spo2.invalid\\\">\\n      <ion-text color=\\\"danger\\\" *ngIf=\\\"batsForm.get('spo2').dirty && errorControl.spo2.errors?.min\\\">\\n        SpO2 be greater than 50%\\n      </ion-text>\\n      <ion-text color=\\\"danger\\\" *ngIf=\\\"batsForm.get('spo2').dirty  && errorControl.spo2.errors?.max\\\">\\n        SpO2 must be 100% or less\\n      </ion-text>\\n      <ion-text color=\\\"danger\\\"*ngIf=\\\"batsForm.get('spo2').dirty && errorControl.spo2.errors?.required\\\">\\n        SpO2 is required when a respiratory rate is not provided\\n      </ion-text>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"fixed\\\">Heart Rate </ion-label>\\n      <ion-input formControlName=\\\"hr\\\" type=\\\"number\\\" pattern=\\\"[0-9]*\\\" min=\\\"0\\\" max=\\\"180\\\" id=\\\"hr\\\" required></ion-input>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"batsForm.get('hr').dirty && errorControl.hr.invalid\\\">\\n      <ion-text color=\\\"danger\\\" *ngIf=\\\"batsForm.get('hr').dirty && errorControl.hr.errors?.min\\\">\\n        Heart rate must be greater than 0\\n      </ion-text>\\n      <ion-text color=\\\"danger\\\" *ngIf=\\\"batsForm.get('hr').dirty && errorControl.hr.errors?.max\\\">\\n        Heart rate must be less than 180\\n      </ion-text>\\n      <ion-text color=\\\"danger\\\"*ngIf=\\\"batsForm.get('hr').dirty && errorControl.hr.errors?.required\\\">\\n        Heart rate value is required\\n      </ion-text>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"fixed\\\">Callsign</ion-label>\\n      <ion-input formControlName=\\\"callsign\\\" type=\\\"number\\\" pattern=\\\"[0-9]*\\\" required placeholder=\\\"Enter vehicle callsign\\\"></ion-input>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"batsForm.get('callsign').dirty && errorControl.callsign.invalid\\\">\\n      <ion-text color=\\\"danger\\\"*ngIf=\\\"batsForm.get('callsign').dirty && errorControl.callsign.errors?.required\\\">\\n        Your vehicle callsign is required\\n      </ion-text>\\n    </ion-item>\\n    \\n    <div class=\\\"ion-padding\\\">\\n      <ion-button  expand=\\\"full\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\" [disabled]=\\\"!batsForm.valid\\\" >Calculate Score</ion-button>\\n    </div>\\n  </form>\\n\\n</ion-content>\\n\"","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    ReactiveFormsModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: Tab1Page }])\n  ],\n  declarations: [Tab1Page]\n})\nexport class Tab1PageModule {}\n","export default \"ion-content ion-toolbar {\\n  --background: translucent;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90cmlja3k5OTkvRG9jdW1lbnRzL0lvbmljLTIwMTkvZm9ybXRlc3Qvc3JjL2FwcC90YWIxL3RhYjEucGFnZS5zY3NzIiwic3JjL2FwcC90YWIxL3RhYjEucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL3RhYjEvdGFiMS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCBpb24tdG9vbGJhciB7XG4gIC0tYmFja2dyb3VuZDogdHJhbnNsdWNlbnQ7XG59IiwiaW9uLWNvbnRlbnQgaW9uLXRvb2xiYXIge1xuICAtLWJhY2tncm91bmQ6IHRyYW5zbHVjZW50O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\n\n\nexport class Tab1Page implements OnInit {\n\n  batsForm: FormGroup;\n\n  thenumbers = new Array(100);\n\n  public show = true;\n  public spinner = false;\n  public loading = null;\n  public isSubmitted = false;\n  public startGCS = 15;\n  public nextID = 1;\n  public age: any;\n  public period: any;\n\n  constructor(\n    private loadingCtrl: LoadingController,\n    public formBuilder: FormBuilder,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n\n    this.batsForm = this.formBuilder.group({\n      bp : ['', [Validators.required, Validators.min(0), Validators.max(240)]],\n      gcs : ['', [Validators.required, Validators.min(3), Validators.max(15)]],\n      rr : ['', [Validators.required, Validators.min(0), Validators.max(60)]],\n      spo2 : ['', [Validators.required, Validators.min(50), Validators.max(100)]],\n      hr : ['', [Validators.required, Validators.min(0), Validators.max(180)]],\n      age : ['', [Validators.required, Validators.min(0), Validators.max(115)]],\n      period : ['', [Validators.required]],\n      penetrating : ['', [Validators.required]],\n      velocity : ['', [Validators.required]],\n      callsign : ['', [Validators.required]]\n    });\n\n    this.batsForm.controls.period.setValue('years');\n\n    this.formControlValueChanged();\n  }\n\nionViewDidEnter() {\n    this.nextID = 1;\n  }\n\n\n\n\n  get errorControl() {\n    return this.batsForm.controls;\n  }\n\n  // tslint:disable-next-line: max-line-length\n  // https://www.infragistics.com/community/blogs/b/infragistics/posts/how-to-do-conditional-validation-on-valuechanges-method-in-angular-reactive-forms-\n\n  // https://stackoverflow.com/questions/47821809/rangeerror-maximum-call-stack-size-exceeded-when-using-valuechanges-subscribe\n  formControlValueChanged() {\n    const spo2Control = this.batsForm.get('spo2');\n    const rrControl = this.batsForm.get('rr');\n    this.batsForm.get('rr').valueChanges.pipe(distinctUntilChanged()).subscribe(\n        (rr: number) => {\n            // console.log(rr);\n            if ( rr !== null && ( rr > 0 || rr < 50 )) {\n                spo2Control.setValidators([Validators.min(50), Validators.max(100)]);\n            } else  {\n                spo2Control.setValidators([Validators.required, Validators.min(50), Validators.max(100)]);\n\n            }\n            spo2Control.updateValueAndValidity();\n        });\n    this.batsForm.get('spo2').valueChanges.pipe(distinctUntilChanged()).subscribe(\n        (spo2: number) => {\n            // console.log(spo2);\n            if (spo2 !== null && ( spo2 > 50 || spo2 < 101 )) {\n                rrControl.setValidators([Validators.min(0), Validators.max(60)]);\n            } else  {\n                rrControl.setValidators([Validators.required, Validators.min(0), Validators.max(60)]);\n\n            }\n            rrControl.updateValueAndValidity();\n        });\n\n  }\n\n  submitForm() {\n      console.log('Form submitted');\n      console.log(this.batsForm.value);\n    }\n\n\n}\n"],"sourceRoot":"webpack:///"}